
# Copyright (C) 2014  Oscar Campos <oscar.campos@member.fsf.org>

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# See LICENSE file for more details.

if [ "$VENGO_HOME" = "" ]; then
    export VENGO_HOME="$HOME/.VenGO"
    . $VENGO_HOME/bin/includes/output
    . $VENGO_HOME/bin/includes/utils
    . $VENGO_HOME/bin/includes/env
    . $VENGO_HOME/bin/includes/help
fi

# main VenGO entry point
function vengo {
    if [ -n "$1" ]; then
        command=$1
        if [ "$command" = "version" ]; then
            version=$(<$VENGO_HOME/version)
            echo -e "VenGO, Virtual Golang Environment builder `Ok`v$version`Reset`"
            return 0
        elif [ "$command" = "vengo-uninstall" ]; then
            echo -ne "this will uninstall VenGO and `Fail`remove`Reset` all your Go "
            echo -n "virtual environments "

            while true; do
                #statements
                read -p "are you sure? [y/n] " answer
                case $answer in
                    [Yy]*)
                        vengo_uninstall
                        break
                    ;;
                    [Nn]*)
                        return 0
                    ;;
                    *)
                        echo "Please answer yes or no."
                    ;;
                esac
            done
            return 0
        elif [ "$command" = "activate" ]; then
            shift
            environment="$1"
            if [ "$environment" = "" ]; then
                $VENGO_HOME/bin/lsenvs
                return 1
            fi
            if [ "$environment" = "-h" ] || [ "$environment" = "--help" ]; then
                vengo_activate_help
                return 1
            fi

            shift
            for i in "$@"; do
                case $i in
                    --pre-activate=*)
                        pre_activate_script=$(echo "$1" | sed 's/[-a-zA-Z0-9]*=//')
                    ;;
                    --post-activate=*)
                        post_activate_script=$(echo "$i" | sed 's/[-a-zA-Z0-9]*=//')
                    ;;
                    -h|--help)
                        vengo_activate_help
                        return 0
                    ;;
                    *)
                        echo "Invalid option $i"
                        vengo_activate_help
                        return 65
                    ;;
                esac
            done

            check_environment_exixtance $environment || return 1
            activate="$VENGO_HOME/$environment/bin/activate"
            if [ ! -f "$activate" ]; then
                echo "VenGO: Environment '$VENGO_HOME/$environment' doesn't contains an activate script." >&2
                echo "  `Ok`suggestion`Reset`: check the integrity of the environments with 'vengo lsenvs'" >&2
                return 1
            fi

            # call deactivate if we are currently into a virtual environment
            type deactivate >/dev/null 2>&1
            if [ $? -eq 0 ]; then
                deactivate
                unset -f deactivate >/dev/null 2>&1
            fi

            if [ -z ${pre_activate_script+x} ] && [ "$pre_activate_script" != "" ]; then
                pre_activate_script "$environment"
            fi

            source "$activate"

            if [ -z ${post_activate_script+x} ] && [ "$post_activate_script" != "" ]; then
                post_activate_script "$environment"
            fi

            return 0
        # handle the given command with the right command handler
        elif [ -f "$VENGO_HOME/bin/$command" ]; then
            shift
            $VENGO_HOME/bin/$command "$@"
        elif [ -n "$command" ]; then
            echo "Command '$command' doesn't look like a valid VenGO command..."
            suggest "execute 'vengo' with no arguments to get a list of valid commands"
        fi
    else
        echo -e "Usage: vengo [command]

Where command is one of the list below:

  `Ok`activate`Reset`           Activate a Virtual Go Environment
  `Ok`install`Reset`            Installs a new Go version
  `Ok`uninstall`Reset`          Uninstall an installed Go version
  `Ok`list`Reset`               List installed and available Go versions
  `Ok`lsenvs`Reset`             List available Virtual Go Environments
  `Ok`mkenv`Reset`              Create a new Virtual Go Environment
  `Ok`rmenv`Reset`              Remove a Virtual Go Environment
  `Ok`vengo-uninstall`Reset`    Uninstall VenGO and remove all the Virtual Go Environments
"
    fi

    return 1
}
